cmake_minimum_required(VERSION 3.17)

SET( FFMPEG_DIR             ${CMAKE_SOURCE_DIR}/dependencies/ffmpeg )
MESSAGE("FFMPEG_DIR       = ${FFMPEG_DIR}" )

FUNCTION( downloadAndUnzipFile address filename hash )
  IF( NOT EXISTS ${FFMPEG_DIR}/${filename}.zip )
    MESSAGE("LOAD : donwload ${address} in ${CMAKE_SOURCE_DIR}/dependencies/${filename}.zip  ")
    FILE( DOWNLOAD       ${address} ${FFMPEG_DIR}/${filename}.zip
          TIMEOUT        600 
          TLS_VERIFY     ON 
          SHOW_PROGRESS 
          EXPECTED_HASH  SHA1=${hash} )
  ELSE()
    MESSAGE( "LOAD : ${FFMPEG_DIR}/${filename}.zip already exist ")
  ENDIF()    
  cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
  IF( NOT EXISTS ${FFMPEG_DIR}/${filename} ) 
    MESSAGE( "UNZIP: unzip ${FFMPEG_DIR}/${filename}")
    FILE( ARCHIVE_EXTRACT 
      INPUT ${FFMPEG_DIR}/${filename}.zip
      DESTINATION ${FFMPEG_DIR}/ 
      VERBOSE )
  ELSE()
    MESSAGE( "UNZIP: ${FFMPEG_DIR}/${filename} already exist ")
  ENDIF()    
ENDFUNCTION( downloadAndUnzipFile )

IF( WIN32 OR MSVC OR MSYS OR MINGW )  
  SET( FFMPEG_DEV_URL https://github.com/BtbN/FFmpeg-Builds/releases/download/autobuild-2020-12-16-12-36/ffmpeg-n4.3.1-26-gca55240b8c-win64-gpl-shared-4.3.zip )  
   IF( NOT EXISTS "${FFMPEG_DIR}/README" )
    GET_FILENAME_COMPONENT( FFMPEG_DEV_NAME ${FFMPEG_DEV_URL} NAME_WE )  
    SET( FFMPEG_DEV_DIR ${FFMPEG_DIR}/${FFMPEG_DEV_NAME} ) 
    downloadAndUnzipFile( ${FFMPEG_DEV_URL} ${FFMPEG_DEV_NAME} e65011e0c50aa212550a75fa3c6e3dea31edc6ad )  
    EXECUTE_PROCESS( COMMAND mv ${FFMPEG_DIR}/ffmpeg-n4.3.1-26-gca55240b8c-win64-gpl-shared-4.3/* ${FFMPEG_DIR}/ )
    EXECUTE_PROCESS( COMMAND rm ${FFMPEG_DIR}/ffmpeg-n4.3.1-26-gca55240b8c-win64-gpl-shared-4.3/ -rf )
    EXECUTE_PROCESS( COMMAND rm ${FFMPEG_DIR}/${FFMPEG_DEV_NAME}.zip -rf )    
    IF( EXISTS "${FFMPEG_DIR}/lib/avcodec.lib" )
      FILE( WRITE ${FFMPEG_DIR}/README "FFMPEG build version from: " ${FFMPEG_DEV_URL}  )    
    ELSE() 
      MESSAGE( FATAL_ERROR "error during the FFMPEG downloading process" )
    ENDIF()
  ENDIF()
 MESSAGE("  ${FFMPEG_DIR}/bin/avcodec-58.dll = " ${FFMPEG_DIR}/bin/avcodec-58.dll )
  file( COPY ${FFMPEG_DIR}/bin/avcodec-58.dll   DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE} )
  file( COPY ${FFMPEG_DIR}/bin/avutil-56.dll    DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE} )
  file( COPY ${FFMPEG_DIR}/bin/avformat-58.dll  DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE} )
  file( COPY ${FFMPEG_DIR}/bin/avfilter-7.dll   DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE} )
  file( COPY ${FFMPEG_DIR}/bin/swresample-3.dll DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE} )
  SET( AVCODEC_LIBRARY  avcodec  )
  SET( AVUTIL_LIBRARY   avutil   )
  SET( AVFORMAT_LIBRARY avformat )
  add_library(         avcodec  SHARED IMPORTED)
  set_property( TARGET avcodec  PROPERTY IMPORTED_LOCATION ${FFMPEG_DIR}/bin/avcodec-58.dll)
  set_property( TARGET avcodec  PROPERTY IMPORTED_IMPLIB   ${FFMPEG_DIR}/lib/avcodec.lib)    
  add_library(         avutil   SHARED IMPORTED)
  set_property( TARGET avutil   PROPERTY IMPORTED_LOCATION ${FFMPEG_DIR}/bin/avutil-56.dll)
  set_property( TARGET avutil   PROPERTY IMPORTED_IMPLIB   ${FFMPEG_DIR}/lib/avutil.lib)    
  add_library(         avformat SHARED IMPORTED)
  set_property( TARGET avformat PROPERTY IMPORTED_LOCATION ${FFMPEG_DIR}/bin/avformat-58.dll)
  set_property( TARGET avformat PROPERTY IMPORTED_IMPLIB   ${FFMPEG_DIR}/lib/avformat.lib)    
  SET( FFMPEG_INCLUDE ${FFMPEG_DIR}/include )
ELSE()
  find_library( AVCODEC_LIBRARY  avcodec  REQUIRED )
  find_library( AVUTIL_LIBRARY   avutil   REQUIRED )
  find_library( AVFORMAT_LIBRARY avformat REQUIRED )
  EXECUTE_PROCESS( COMMAND find /usr/include/ -name "avcodec.h" -exec dirname {} \; OUTPUT_VARIABLE AVCODEC_DIR OUTPUT_STRIP_TRAILING_WHITESPACE )
  SET( FFMPEG_INCLUDE ${AVCODEC_DIR}/.. )
ENDIF()
message( "AVCODEC_LIBRARY  = ${AVCODEC_LIBRARY}  " )
message( "AVUTIL_LIBRARY   = ${AVUTIL_LIBRARY}   " )
message( "AVFORMAT_LIBRARY = ${AVFORMAT_LIBRARY} " )
message( "FFMPEG_INCLUDE   = ${FFMPEG_INCLUDE}   " )
IF( NOT AVCODEC_LIBRARY )
  MESSAGE( FATAL_ERROR "Please install ffmpeg on your system: sudo apt-get install cmake build-essential libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libswscale-dev" )
ENDIF()
